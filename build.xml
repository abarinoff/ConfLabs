<project name="ConfLabs" default="all" xmlns:if="ant:if" xmlns:unless="ant:unless">

    <property file="build.properties"/>

    <condition property="local.build">
        <equals arg1="${build.location}" arg2="local"/>
    </condition>

    <target name="all" depends="clean, build, test, deploy"/>

    <target name="clean">
        <antcall target="execute.play.command">
            <param name="play.command" value="clean"/>
        </antcall>
    </target>

    <target name="build">
        <antcall target="execute.play.command">
            <param name="play.command" value="compile"/>
        </antcall>
    </target>

    <target name="test">
        <antcall target="execute.play.command">
            <param name="play.command" value="test"/>
        </antcall>
    </target>

    <target name="deploy" depends="init.heroku.remote" unless="local.build">
        <exec executable="git" failonerror="true">
            <arg line="push"/>
            <arg line="${deployment.remote}"/>
            <arg line="${project.branch}"/>
        </exec>
    </target>

    <target name="execute.play.command">
        <exec executable="cmd" failonerror="true">
            <arg line="/c"/>
            <arg line="play"/>
            <arg line="${play.command}"/>
        </exec>
    </target>

    <target name="init.heroku.remote" unless="local.build">
        <exec executable="git" failonerror="true" outputproperty="git.remotes">
            <arg line="remote"/>
        </exec>

        <condition property="heroku.remote.exists">
            <contains string="${git.remotes}" substring="heroku"/>
        </condition>

        <exec executable="git" failonerror="true" unless:set="heroku.remote.exists">
            <arg line="remote add"/>
            <arg line="${deployment.remote}"/>
            <arg line="git@${deployment.remote}.com:${project.name}.git"/>
        </exec>
    </target>

</project>