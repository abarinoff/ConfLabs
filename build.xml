<project name="ConfLabs" basedir="." default="all" xmlns:if="ant:if" xmlns:unless="ant:unless">

    <taskdef resource="net/sf/antcontrib/antlib.xml" />

    <property file="build.properties"/>

    <condition property="local.build">
        <equals arg1="${build.location}" arg2="local"/>
    </condition>

    <condition property="is.windows">
        <os family="windows"/>
    </condition>

    <condition property="is.unix">
        <os family="unix"/>
    </condition>

    <target name="all" depends="info, clean, build, test, deploy"/>

    <target name="info">
        <echo message="Ant version: ${ant.version}"/>
        <echo message="Build location: ${build.location}"/>
    </target>

    <target name="clean">
        <antcall target="execute.play.command">
            <param name="play.command" value="clean"/>
        </antcall>
    </target>

    <target name="build">
        <antcall target="execute.play.command">
            <param name="play.command" value="compile"/>
        </antcall>

        <antcall target="report.build.results"/>
    </target>

    <target name="test">
        <antcall target="execute.play.command">
            <param name="play.command" value="test"/>
        </antcall>

        <antcall target="report.test.results"/>
    </target>

    <target name="deploy" depends="init.deployment.remote" unless="local.build">
        <exec executable="git" failonerror="true">
            <arg line="push"/>
            <arg line="${deployment.remote}"/>
            <arg line="${project.branch}"/>
        </exec>
    </target>

    <target name="execute.play.command" depends="execute.play.command.on.windows, execute.play.command.on.unix"/>

    <target name="execute.play.command.on.windows" if="is.windows">
        <exec executable="cmd" failonerror="true">
            <arg line="/c"/>
            <arg line="play"/>
            <arg line="${play.command}"/>
        </exec>
    </target>

    <target name="execute.play.command.on.unix" if="is.unix">
        <exec executable="play" failonerror="true">
            <arg line="${play.command}"/>
        </exec>
    </target>

    <target name="report.build.results">
        <fail message="Compilation failed.">
            <condition>
                <resourcecontains resource="${compilation.report.dir}/${compilation.report.file.name}" substring="[error]"/>
            </condition>
        </fail>
    </target>

    <target name="report.test.results">
        <fail message="Tests compilation failed.">
            <condition>
                <resourcecontains resource="${test.compilation.report.dir}/${test.compilation.report.file.name}" substring="[error]"/>
            </condition>
        </fail>

        <junitreport todir="${test.report.dir}" tofile="${all.tests.report.file.name}">
            <fileset dir="${test.report.dir}">
                <include name="*.xml"/>
            </fileset>
        </junitreport>

        <xmlproperty file="${test.report.dir}/${all.tests.report.file.name}"
                     prefix="test.results" collapseAttributes="true" keeproot="false"/>

        <for list="${test.results.testsuite.failures}" param="failures">
            <sequential>
                <if>
                    <not>
                        <equals arg1="@{failures}" arg2="0"/>
                    </not>

                    <then>
                        <fail message="Unit tests failed."/>
                    </then>
                </if>
            </sequential>
        </for>
    </target>

    <target name="init.deployment.remote" unless="local.build">
        <exec executable="git" failonerror="true" outputproperty="git.remotes">
            <arg line="remote"/>
        </exec>

        <condition property="deployment.remote.exists">
            <contains string="${git.remotes}" substring="${deployment.remote}"/>
        </condition>

        <exec executable="git" failonerror="true" unless:set="deployment.remote.exists">
            <arg line="remote add"/>
            <arg line="${deployment.remote}"/>
            <arg line="git@${deployment.remote}.com:${project.name}.git"/>
        </exec>
    </target>

</project>
